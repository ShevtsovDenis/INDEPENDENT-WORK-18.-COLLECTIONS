using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace COLLECTIONS
{
    /*Дана строка, содержащая скобки трёх видов (круглые, квадратные и фигурные) и любые другие символы. 
    Проверить, корректно ли в ней расставлены скобки. Например, в строке ([]{})[] скобки расставлены корректно, а в строке ([]] — нет. 
    Указание: задача решается однократным проходом по символам заданной строки слева направо; 
    для каждой открывающей скобки в строке в стек помещается соответствующая закрывающая, каждая закрывающая скобка в строке должна соответствовать скобке из вершины стека (при этом скобка с вершины стека снимается);
    в конце прохода стек должен быть пуст.*/
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Введите строку");
            string str = Console.ReadLine();
            Console.WriteLine(Check(str));
            Console.ReadKey();
        }

        static bool Check(string str)//Создаем метод для проверки условий
        {
            //Создаем экземпляр коллекции "стек". В качестве типа данных используем символ.
            Stack<char> stack = new Stack<char>();
            //Создаем экземпляр коллекции "словарь". В качестве ключа и значения используем тип данных символ. Сразу прописываем пары ключ-значение.
            Dictionary<char, char> sk = new Dictionary<char, char>()
            {
                {'(',')' },
                {'{','}' },
                {'[',']' },
            };
            //Перебираем посимвольно строку
            foreach (char c in str)
            {
                if (c == '(' || c == '{' || c == '[')//если находим открытую скобку
                    stack.Push(sk[c]);//помещаем в стек значение из словаря, соответствующее текущему ключу
                if (c == ')' || c == '}' || c == ']')//если находим закрытую скобку
                {
                    if (stack.Count == 0 || stack.Pop() != c)//если количество символов в стеке равно 0 или извлеченный символ не равен с
                        return false;//прекращаем цикл. В остальных случаях извлекаем символ из стека.
                }
            }
            //Если после цикла стек пустой, то соотношение скобок верное
            if (stack.Count == 0)
                return true;
            else
                return false;//количество открытых скобок превышает количество закрытых
        }
    }
}
